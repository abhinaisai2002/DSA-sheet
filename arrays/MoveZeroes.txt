Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

Method 1 :

1.Traverse the array elements with index i one by one and maintain a pointer **first** to array.
2.If the element is 0 then ++i.
3.If not swap the current index value with first index.Then first++ and i++.
4.This process is done until all the elements are traversed in the array.

Code :
public void moveZeroes(int[] nums) {            
    int first = 0;
    for(int i=0;i<nums.length;i++){
        if(nums[i]!=0){
            swap(nums,first,i);
            first++;
        }
    }
}

Time Complexity : O(n).
Space Complexity : O(1).